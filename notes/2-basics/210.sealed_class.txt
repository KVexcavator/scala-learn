Запечатанные иерархии классов и перечисления

Ключевое слово sealed сообщает компилятору, что все подтипы должны быть объявлены в одном исходном файле. Some и None объявляются в одном файле с Option в библиотеке Scala. Этот метод эффективно предотвращает дополнительные подтипы Option.

sealed abstract class Option[+A] {...}
case class Some[+A](a: A) extends Option[A] {...}
case object None extends Option[Nothing] {...}

Здесь None — это case-класс с единственным экземпляром, поэтому он объявлен case-объектом. Тип Nothing вместе с типом Null являются подтипами всех других типов в Scala.
Вы также можете объявить тип final, если хотите запретить пользователям создавать для него подтипы.
Это же ограничение на создание подтипов теперь можно реализовать более лаконично в Scala 3 с новым синтаксисом enum:

enum Option[+A] {
  case Some(a: A) {...}
  case None {...}
  ...
}